notifications:
  default_group:
    resources:
      - name: coreApiEvents
        excludeSelector:  # use `excludeSelector` to exclude events that match one of the following
          reasons:  # list work as a `or`
            - ApplyJob  # Recurrent K3s HelmChart apply job
            - Unhealthy
            - Scheduled
            - Created
            - AddedInterface
            - Pulled
            - Killing
          involvedObjectKind:  # list work as a `or`
            - Job
            - CronJob
            # - Pod
          labels:  # kube-notify merge event labels (should be null) with involvedObject labels if is Pod
            - key: job-name
          # namespaces:
          #   - kube-system
          # types:
            # - Normal
      - name: coreApiEvents
        selector:
          types:
            - Error  # includes PodTerminationErrors
      - name: customResources
    gotify:
      url: https://gotify.example.local
      token: CHANGEME
    discord:
      webhook: toto
      username: kube-notify
      # avatar_url: changeme
    mattermost:
      webhook: https://chat.local/hooks/aaaaaaaaa
      # username: kube-notify
      # icon_url: https://kubernetes.io/images/k8s-10th-birthday.svg
      # channel: Kube-notify
  custom_group:
    resources:
      - name: customResources
        selector:  # elements work as "and" to filter custom resources
          types:   # list works as a "or"
            - velero.io/v1/backups
          labels:  # list works as a "or"
            - key: velero.io/schedule-name
              value: custom-schedule
    discord:
      webhook: toto
      username: kube-notify
      # avatar_url: changeme

events:
  coreApiEvents:
    enabled: true  # disable to not watch kubernetes core API "Events" resources
    addPodTerminationErrors: true  # parse all pod statuses to detect restart reasons as Errors and append to coreApiEvents
    # pollingIntervalSeconds: 60  # Uncomment to change default

  customResources:
    - type: velero.io/v1/backups
      # pollingIntervalSeconds: 60  # Uncomment to change default
      namespaces: [velero]
      includeFields:
        # dict : `fieldName: path in yaml description of the resource/event`
        Status: status.phase
      lastTimestamp: 'status.completionTimestamp | status.startTimestamp | metadata.creationTimestamp'
    - type: velero.io/v1/restores
      # pollingIntervalSeconds: 60  # Uncomment to change default
      namespaces: [velero]
      includeFields:
        Status: status.phase
      lastTimestamp: 'status.completionTimestamp | status.startTimestamp | metadata.creationTimestamp'
